@model ecloning.Models.ViewExp
@{
    ViewBag.Title = "Experiment Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int Id = ViewBag.expId;
    string AllowedAction = ViewBag.AllowedAction;
    var db = new ecloning.Models.ecloningEntities();
    //get step types
    var types = new ecloning.Models.ExpTypes();
}

<div class="row">
    <div class="col-sm-offset-1 col-sm-5 col-xs-12">
        <h3 class="text-warning"><i class="fa fa-flask"></i> Experiment </h3>
    </div>
    <div class="col-sm-5 col-xs-12">
        <div class="col-xs-4">
            <h3 class="pull-left">
                @if (AllowedAction == "Share")
                {
                    <a data-toggle="modal" href="@Url.Action("Share", "Experiment", new { id = Model.id })" data-target="#share_exp" class="btn btn-warning">
                        <i class="fa fa-share-alt"></i>
                        <span>Collaboration</span>
                    </a>
                }
                @if (AllowedAction == "unShare")
                {
                    <a data-toggle="modal" href="@Url.Action("unShare", "Experiment", new { id = Model.id })" data-target="#share_exp" class="btn btn-warning">
                        <i class="fa fa-times-circle"></i>
                        <span>Unshare</span>
                    </a>
                }
            </h3>
        </div>
        <div class="col-xs-4">
            <h3 class="">
                <a href="@Url.Action("AddStep", "Experiment", new { id = Model.id })" class="btn btn-danger" data-toggle="tooltip" data-placement="bottom" title="Add Experiment Steps">
                    <i class="fa fa-plus-circle"></i>
                    <span>Steps</span>
                </a>
            </h3>
        </div>
        <div class="col-xs-4">
            <h3 class="pull-right">
                <a href="@Url.Action("Index", "Experiment")" class="btn btn-default" data-toggle="tooltip" data-placement="bottom" title="Go Back to Experiment List">
                    <i class="fa fa-caret-left"></i>
                    <span>Experiments</span>
                </a>
            </h3>
        </div>
    </div>
    <div id="share_exp" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title text-center text-info">Who do you want to collaborate?</h4>
                </div>
                <div class="modal-body">
                    <i class="fa fa-spinner fa-pulse fa-3x fa-fw"></i>
                    <span> Loading ...</span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>
<p class="text-center text-danger">@TempData["msg"]</p>
<div class="row">
    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
        <dl class="dl-horizontal">
            <dt>
                Experiment
            </dt>
            <dd>
                @Html.DisplayFor(model => model.name)
            </dd>
            <dt>
                Remarks
            </dt>
            <dd>
                @Html.Raw(Model.des)
            </dd>
            <dt>
                Owner
            </dt>
            <dd>
                @Html.DisplayFor(model => model.owner)
            </dd>
            <dt>
                Date
            </dt>
            <dd>
                @if (Model.dt != null)
                {
                    var day = Model.dt.Value.Day;
                    var month = Model.dt.Value.Month;
                    var year = Model.dt.Value.Year;
                    var dc = new ecloning.Models.DateConvert();
                    var outDate = dc.GetDate(day, month, year, "ddMMyyyy", "/");
                    @outDate
                }
            </dd>
        </dl>
    </div>
    <div class="clearfix"></div>
    <div class="col-xs-12 col-sm-offset-1 col-sm-10">
        @if (Model.steps.Count() == 0)
        {
            <br />
            <div class="row">
                <div class="col-sm-1 hidden-xs"></div>
                <div class="col-sm-10 col-sm-offset-1 col-xs-12">
                    <h4 class="text-info">No Step yet. Click above to add experiment steps</h4>
                </div>
            </div>
        }
        else
        {
            <table class="table table-hover table-striped table-condensed" id="step_table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>
                            Category
                        </th>
                        <th class="no-sort">
                            Name
                        </th>
                        
                        <th class="no-sort">
                            Remarks
                        </th>
                        <th class="no-sort">
                            Owner
                        </th>
                        <th class="no-sort">
                            Protocol
                        </th>
                        <th class="no-sort">
                            Date
                        </th>                        
                        <th class="no-sort"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.steps)
                    {
                        //get step type name
                        
                        var type = types.getName(item.type_id);
                        
                        //get the protocol
                        var protocol = db.protocols.Find(item.protocol_id);
                        var protocolName = "";
                        if (protocol != null)
                        {
                            protocolName = protocol.name;
                        }
                                                
                        //date
                        string outDate = "";
                        if (Model.dt != null)
                        {
                            var day = item.dt.Value.Day;
                            var month = item.dt.Value.Month;
                            var year = item.dt.Value.Year;
                            var dc = new ecloning.Models.DateConvert();
                            outDate = dc.GetDate(day, month, year, "ddMMyyyy", "/");                            
                        }
                        <tr>
                            <td>@item.id</td>
                            <td>
                                @type
                            </td>
                            <td>
                                @item.name
                            </td>                            
                            <td>
                                @Html.Raw(item.des)
                            </td>
                            <td>
                                @item.step_owner
                            </td>
                            <td>
                                @protocolName
                            </td>
                            <td>
                                @outDate
                            </td>
                            <td>                                
                                <a href="@Url.Action("Index", "Experiment", new { id = item.id })" data-toggle="tooltip" data-placement="bottom" title="Add results and view details" class="btn btn-danger">
                                    <i class="fa fa-plus-circle"></i>
                                    <span></span>
                                </a> |
                                <a href="@Url.Action("Index", "Experiment", new { id = item.id })" data-toggle="tooltip" data-placement="bottom" title="Remove this step" class="btn btn-default">
                                    <i class="fa fa-trash-o"></i>
                                    <span></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    //step_table
    //stepIds
    var stepIds = [];
    $('#step_table tbody').sortable({
        update: function (event, ui) {
            //console.debug(event);
            //console.debug(ui);
            $("#step_table tbody tr").each(function (i) {
                //get step id
                var id = $(this).find("td:nth-child(1)").text();

                stepIds.push(+id);
            });

            //save to the server
            $.ajax({
                type: "POST",
                url: '@Url.Action("SortStep", "Experiment", new { id = Model.id })',
                data: { 'StepId': JSON.stringify(stepIds) }
            });
        }
    });
    //$("#step_table tbody").disableSelection();
</script>